name: CI

on:
  push:
  workflow_dispatch:

jobs:
  secrets:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v3

      - name: scan secrets with Spectral
        uses: spectralops/spectral-github-action@v3
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines secrets --include-tags base,audit

  IaC:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v3

      - name: scan IaC with Spectral
        uses: spectralops/spectral-github-action@v3
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines iac --include-tags base,azure
  SAST:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v3

      - name: scan IaC with Spectral
        uses: spectralops/spectral-github-action@v3
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines iac --include-tags base,azure

  SCA:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore ./src/CafeReadConf.sln
      
      - name: scan OSS with Spectral
        uses: spectralops/spectral-github-action@v3
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines oss --include-tags base,audit

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif --file=./src/CafeReadConf.sln --severity-threshold=medium
        
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  Docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: hadolint
        run: |
          echo 'Downloading Hadolint to lint Dockerfile...'
          wget https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          chmod +x hadolint-Linux-x86_64
          mv hadolint-Linux-x86_64 hadolint

          echo 'Start Dockerfile lint...'
          ./hadolint Dockerfile -f tty > results.txt

          echo 'Results:'
          cat results.txt
        working-directory: ./src

  build:
    needs: [secrets, SCA, Docker,IaC]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore ./src/CafeReadConf.sln
      
      - name: Build
        run: dotnet build --no-restore --configuration Release
        working-directory: ./src
  
  deployToDev:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore ./src/CafeReadConf.sln
      
      - name: Build
        run: dotnet build --no-restore --configuration Release
        working-directory: ./src
  
  DAST:
    needs: [deployToDev]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3


  LoadTest:
    needs: [deployToDev, DAST]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3


  deployToProd:
    needs: [LoadTest]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
