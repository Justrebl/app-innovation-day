name: CI

on:
  push:
  workflow_dispatch:

jobs:
  secrets:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v3

      - name: scan secrets with Spectral
        uses: spectralops/spectral-github-action@v3
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines secrets --include-tags base,audit
  iac:
    runs-on: ubuntu-latest
    env:
      SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}
    steps:
      - uses: actions/checkout@v3

      - name: scan IaC with Spectral
        uses: spectralops/spectral-github-action@v3
        with:
          spectral-dsn: ${{ env.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines iac --include-tags base,azure
                      
  sca:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore ./src/CafeReadConf.sln

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif --file=./src/CafeReadConf.sln --severity-threshold=medium
        
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: hadolint
        run: |
          echo 'Downloading Hadolint to lint Dockerfile...'
          wget https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          chmod +x hadolint-Linux-x86_64
          mv hadolint-Linux-x86_64 hadolint

          echo 'Start Dockerfile lint...'
          ./hadolint dockerfile -f tty > results.txt

          cat results.txt
        working-directory: ./src

  build:
    needs: [secrets, sca, docker,iac]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.